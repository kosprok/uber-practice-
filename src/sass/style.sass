$main-color: #1eacc7
$second-color: #ff5656

@mixin btn_hover
    &:hover
        // так як кнопки в нас тут прописані як бекграунд-імідж, (градієнт також вважається картинкою), спочатку його забираєм, бо простий бекграунд його не перебє
        background-image: none
        // після цього вже можна задати, наприклад, інший колір, хоча тут той самий, для прикладу
        background-color: $main-color

*
    font-family: 'Roboto', sans-serif

/* це прописали коли робили наповзання напівпрозорого блоку (лого, номер і перша кнопка) на другий блок
header
    position: relative
  
    /* робим шапку фіксованою зверху при прокрутці сторінки (дія 1 із 5)
    height: 50px

nav
    /* п.5 так як ми винесли <nav> з <div class="container">, тепер ми можемо застилізувати нав замість хедера, і це буде правильніше, то тут також потрібно замінити 'header' на 'nav' !
    min-height: 50px
    background-color: #212121
  
    /* робим шапку фіксованою зверху при прокрутці сторінки (дія 2 із 5)
    position: fixed
  
    /* робим шапку фіксованою зверху при прокрутці сторінки (дія 3 із 5)
    width: 100%
  
    /* робим шапку фіксованою зверху при прокрутці сторінки (дія 4 із 5)
    для того, щоб наша шапка була завжди поверх всього контенту, і 4 блок з машиною не наповзав на неї, міняєм індекс на 3
    z-index: 4

.menu
    /*  п.1 'header nav' в середині хедера є нав, паддінги не можем прописати до шапки і контейнера (class="container"), тому прописуєм їх всередині контейнера, відповідно, до навігаційного меню <nav>
    /*  п.2 '.menu' а ще можем застосувати ці правила напряму до класу 'class="menu"', по суті нічого дуже не зміниться, тільки паддінги тепер будуть в самого 'меню', а не у 'нав', а він в свою чергу просто розтягнувся на всю довжину, задану class="container", так як це блочний елемент
  
    /* крім відступів з обох боків нав меню по 70 пікселів, між пунктами навігації є розділювачі, які ми будем робити за допомогою "бордера", і вони згідно макету мають бути обмежені зверху і знизу по 10 пікселів, тому ми їх додали сюди замість початковогового "padding: 0 70px;"
    padding: 13px 70px
  
    /* так як в бутстрапі є задані певні параметри (в даному випадку 'margin-bottom: 1rem;'), то нам потрібно провірити і перенаназначити ці властивості під себе, згідно макету для кожного класу/контейнеру
    margin: 0
  
    /* так як ми використовуємо безномерний список (<ul>) для елементів які розташовані не попорядку, в нас є 'кругляшки' біля кожного меню, для того щоб їх забрати використовуємо цю функцію
    list-style: none
  
    /* для того щоб всі меню вирівняти горизонтально (з вертикального списку), використовуєм цю властивість
    display: flex
  
    /* для того щоб розташувати всі меню симетрично по ширині відносно бічних границь, застосовуєм цю властивість
    justify-content: space-between
  
    /* п.3 наш 'header' ми задали згідно макету - 50 пікселів, а от <div class="container"> розтягується по висоті в залежності від того, скільки контенту є в ньому, і зараз його висота получається 44 пікселі, через що знизу залишається невеликий зазор в 6 пікселів, що виглядає не симетрично в хедері, ми можем це поправити, трошки змінивши і підігнавши паддінги всередині нього, в <ul class="menu">. Замість 'padding: 10px 70px;' вирахуємо і підгонимо їх так, щоб цей контейнер мав таку ж вистоу як і 'header', тому вище в нас буде тепер 'padding: 13px 70px;'

    .menu_link
        /* стилізуємо самі силки, а не <li>, як вони мають бути згідно з макетом
        color: #ffffff
        font-size: 15px
        font-weight: 300
        
        /* щоб силки не підкреслювались, використовуємо цю властивість
        text-decoration: none

    .menu_item
        /* робимо розділювачі між пунктами меню в хедері
        border-right: 2px dotted black

        /* відсуваєм наші розділювачі від краю кожного меню так, щоб вони знаходились по центру між 2 пунктами (в даному випадку точних розмірів на макеті немає - весь текст однією лінією в макеті, відміряли лінійкою, і взяли приблизне значення в 28px)
        padding-right: 28px

.subheader
    height: 84px

    /* opacity: 0.6; - тут авокод нам дав таку властивість, але так залишати неправильно, бо тоді весь блок буде з такою прозорістю (написи, і все решта). нам замість цього тре поставити прозорість в бекграунді (поміняти background-color: #000000; на background-color: rgba(0,0,0, .6);)
    background-color: rgba(0, 0, 0, 0.6)

    /* для того щоб ця частина (напвіпрозорий блок з лого, номером і кнопкою) була поверх іншого блоку є 2 варіанти як це зробити
    
    /* в.1 - робим в цього блоку позиціювання - position: absolute;, і не забуваєм в батківського header призначити  {position: relative;}
    position: absolute

    /* і не забуваєм вказувати ширину, щоб блок не сплющувався після абсолютного позиціювання
    /* ширина в такому випадку буде 100% від ширини батьківського блоку
    width: 100%
    
    /* робим шапку фіксованою зверху при прокрутці сторінки (дія 5 із 5)
    top: 50px

    &_logo
        /* якщо раптом колись логотип поміняється (розміри можуть бути більшими, наприклад), то новий лого не буде вилізати за цю колонку, для цього застосовуєм 'max-width: 100%;'
        max-width: 100%
        
        margin-top: 16px

        /* для того щоб вирівняти логотип по вертикалі згідно макету, тре додати цю строчку (display: block;), так як посилання в якому знаходиться логотип - від самого початку строчний елемент і марджини для нього не працюють !
        display: block

    &_text
        opacity: 0.5
        color: #ffffff
        font-size: 13px
        font-weight: 300
        margin-top: 6px

    &_text_call
        color: #ffffff
        font-size: 12px
        font-weight: 300
        text-align: right
        margin-top: 19px

    .subheader_phone
        color: #ffffff
        font-size: 22px
        font-weight: 400
        text-transform: uppercase
        margin-top: 8px

        /* силку також потрібно зробити блочним елементом, щоб не виникало проблем і можна було її вирівняти по правому краю
        display: block
        text-align: right
        text-decoration: none

        /* із за того, що в бутстрапі є задано лайн-хайт, мусим тут поправити за допомогою цієї ж властивості, зменшивши висоту строки, щоб номер піднявся вище
        line-height: 17px

    .subheader_btn
        margin-top: 20px
        width: 172px
        height: 46px
        box-shadow: inset 0 -3px 0 rgba(0, 0, 0, 0.12)

        /* бордер в авокоді може косячити, тому можна попробувати його ставити як нижче
        border: none

        /* для того щоб зробити заокруглені кути в кнопки прописуємо наступну властивість
        border-radius: 4px
        
        background-image: linear-gradient(to top, #1eacc7 0%, #4ce2ff 100%)
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.21)
        color: #ffffff
        font-size: 14px
        font-weight: 400
        text-align: center
        text-transform: uppercase
        outline: none
        // для того щоб нопка стала інтерактивною, додаєм наступний міксін
        @include btn_hover

.promo
    min-height: 800px

    /* для того щоб працювала картинка як задній фон, не забуваємо ставити ' ' в юрл
    background: url('../img/bg/main_bg.jpg') center (center / cover) no-repeat

    /* так як в нас зверху буде на секцію .promo наїжджати напвіпрозорий блок .subheader, то нам потрібно змістити всю цю структуру цього блоку вниз, враховуючи ширину .subheader'а і зразу зробити верхній відступ в заголовка .promo_header. Заодно можна й задати нижній відступ (нехай буде))
    padding: 150px 0 135px 0

    .promo_header
        color: #ffffff
        font-size: 60px
        font-weight: 700
        text-align: center
        text-transform: uppercase

        /* так як в бутстрапі задані свої стандартні значення line-height, нам потрібно зробити так, щоб вони не впливали на наш текст і його положення, тому прописуєм свій line-height (берем його таке ж значення як і розмір шрифта для простоти)
        line-height: 60px

        /* аналогічно як із line-height
        margin-bottom: 0px

    .promo_subheader
        margin-top: 20px
        color: #ffffff
        font-size: 36px
        font-weight: 700
        text-align: center
        text-transform: uppercase

        /* так як в бутстрапі задані свої стандартні значення line-height, нам потрібно зробити так, щоб вони не впливали на наш текст і його положення, тому прописуєм свій line-height (берем його таке ж значення як і розмір шрифта для простоти)
        line-height: 36px

        /* аналогічно як із line-height, тільки це зовнішній відступ знизу
        margin-bottom: 0px

    .promo_description
        margin-top: 23px
        color: #ffffff
        font-size: 18px
        font-weight: 300
        text-align: center
        line-height: 24px

    .promo_btn
        /* кнопка по факту інлайн-блок, а нам потрібен блок, щоб за допомою марджиныв вирывняти ъъ по центру, тому:
        display: block

        /* потім зразу задаєм відступ зверху-знизу, і вирівнюєм по горизонтлі в центр:
        margin: 118px auto 0 auto
        
        width: 259px
        height: 63px
        box-shadow: inset 0 -4px 0 rgba(0, 0, 0, 0.12)
        border: 3px solid rgba(0, 0, 0, 0.07)
        background-image: linear-gradient(to top, #1eacc7 0%, #4ce2ff 100%)

        /* для того щоб зробити заокруглені кути в кнопки прописуємо наступну властивість
        border-radius: 4px

        /* бордер в авокоді може косячити, тому можна попробувати його ставити як нижче
        border: none
        
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.21)
        color: #ffffff
        font-size: 18px
        font-weight: 400
        text-align: center
        text-transform: uppercase
        outline: none
        // для того щоб нопка стала інтерактивною, додаєм наступний міксін
        @include btn_hover

.reasons
    /* спочатку задали внутрішні відступи зверху і знизу в цілому блоці
    padding: 71px 0 65px 0

.label
    /* центруєм по горизонталі
    margin: 0 auto
    width: 112px
    height: 24px
    background-color: #000000
    color: #ffffff
    font-size: 12px
    font-weight: 400

    /* внутрішні відступи для тексту, щоб вирівняти згідно макету
    padding: 7px 0 6px 0
  
    line-height: 13px
    text-align: center
    text-transform: uppercase

    // для 4 блоку з інвертованим кольором додаєм сюди наступне
    position: relative
    &_white
        background-color: #ffffff
        color: #070716
        z-index: 2

.title
    margin-top: 38px

    /* в бутстрапі є нижні відступи задані, перевірити щоб не мішали, або забрати їх, як тут
    margin-bottom: 0
  
    color: #222222
    font-size: 36px
    font-weight: 700
    line-height: 38px
    text-align: center
    text-transform: uppercase

    // для 4 блоку з інвертованим кольором додаєм сюди наступне
    position: relative
    &_white
        margin-top: 32px
        color: #ffffff
        z-index: 2


.subtitle
    margin-top: 19px
    color: #222222
    font-size: 17px
    font-weight: 400
    line-height: 21px
    text-align: center

    // для 4 блоку з інвертованим кольором додаєм сюди наступне
    position: relative
    &_white
        color: #ffffff
        font-weight: 300
        z-index: 2


.reasons .reasons_block
    margin-top: 38px

    /* далі для того щоб можна було розмістити контейнери по сітці і вирівняти задаєм наступні три властивості
    display: flex
    justify-content: center
    align-items: center

    .reasons_round
        width: 113px
        height: 113px
        background-color: #1eacc7

        /* далі робим голубі круги з квадратів
        border-radius: 100%

        /* далі щоб відцентрувати іконки в кругах перетворюємо знов в флекс контейнер з іконкою
        display: flex

        /* далі щоб вирівняти іконки в кругах вздовж головної осі по центру крга прописуєм
        justify-content: center

        /* далі для того щоб іконки вирівнялиць по центру вертикальної осі і не розтягувались в кругу, прописуєм наступне
        align-items: center

        /* ну і відступ від голубого круга до тексту поряд
        margin-right: 26px

    .reasons_description
        /* задаєм тільки ширину блоку з текстом
        width: 343px

        .reasons_subtitle
        line-height: 21px
        color: #1eacc7
        font-size: 17px
        font-weight: 400

        /* для того щоб круги не з'їжджали по висоті через різну вистоу заголовків (голубий) задав мін висоту заголовків
        min-height: 50px

        /* щоб вирівняти заголовки в контейнерах прописуєм спочатку тип а потім вирівнювання по низу контейнера
        display: flex
        align-items: flex-end

        .reasons_text
        /* знову ж таки, через те що тексти різної вистоти в блоці получаються, задав мінімальну, щоб всі кружки були строго один навпроти одного
        min-height: 110px
        
        color: #202020
        font-size: 15px
        font-weight: 300
        line-height: 21px

        /* і вирівнювання тексту на всю ширину колонки
        text-align: justify

.mobile
    min-height: 864px

    // після того, як поправили нижні границі в блоків з картинкою (19 пікселів, марджин-боттом), поміняв тут нижню грагицю з 79 на 60 пікселів, щоб загальна висота була як в макеті
    padding: 48px 0 60px 0

    background: url('../img/bg/mobile_app.png') center (center / cover) no-repeat
    
    // далі, для того щоб перейти до наступного "класу", ми не приписуєм цілий шлях, а ставим значок "&" і пишем назву потрібного нам "класу"
    &_item
        width: 320px
        height: 280px

        // не забуваєм, що нам потрібно вирівняти цей блок по центру!
        margin: 0 auto

        // тепер вже не прописуєм цілу структуру каталогу (.mobile .mobile_item mobile_item_1), а просто користуємся вкладенням через знак " & "
        &_1
            background: url('../img/bg/mobile_screen_1.jpg') center (center / cover) no-repeat
        &_2
            background: url('../img/bg/mobile_screen_2.jpg') center (center / cover) no-repeat
        &_3
            background: url('../img/bg/mobile_screen_3.jpg') center (center / cover) no-repeat
        &_4
            background: url('../img/bg/mobile_screen_4.jpg') center (center / cover) no-repeat
        &_5
            background: url('../img/bg/mobile_screen_5.jpg') center (center / cover) no-repeat
        &_6
            background: url('../img/bg/mobile_screen_6.jpg') center (center / cover) no-repeat
        &_subtitle
            color: #ffffff
            font-size: 24px
            font-weight: 400
            line-height: 31px
            text-align: center
            text-transform: uppercase
    
    // так як задати відступи зверху і знизу для блоків не получиться через них самих (відступи зверху і знизу будуть різні для першого і другого ряду), то спочатку задамо зовнішіні відступи в контейнері, в якому вони знаходяться "row", і вже після того задати самим блокам нижній відступ згідно шаблону
    .row
        margin-top: 32px

    &_item
        margin-bottom: 19px
        padding-top: 92px
        position: relative
        &_icon
            width: 26px
            height: 26px
            background-color: #000000

            // вирівнюєм елемнт по центру
            margin: 0 auto
            // робим з квадрата круг
            border-radius: 100%

            // для того щоб розташувати хрестик в середині кружка використовуєм наступне
            display: flex
            justify-content: center
            align-items: center

            // далі для того щоб зпозиціонувати цей кружок з хрестиком так як на макеті приписуєм наступне, і заодно додоєм строчку "position: relative" в батьківського контейнера
            position: absolute
            bottom: 35px

            // для того щоб розмістити цей кружок з хрестиком в центрі по горизонталі приписуєм
            left: 50%
            // але так як не враховується ширина самої іконки, то вона трохи зміщена від центру, тому використовуєм наступне, щоб по горизонталі (осі Х) "трансформувати" (змістити) іконку в центр, "відцентрувати"
            transform: translateX(-50%)

            cursor: pointer
            // СТВОРЮЄМО ХРЕСТИКИ В 3 БЛОЦІ!
            &::before
                // ДЛЯ ТОГО, ЩОБ НАШІ ПСЕВДОЕЛЕМЕНТИ ПРАЦЮВАЛИ, ЇМ ЗАВЖДИ ПОТРІБНА ВЛАСТИВІСТЬ (content: '') НАВІТЬ ПУСТА!!!
                content: ''
                display: block
                width: 14px
                height: 2px
                background-color: $main-color
                // для того щоб перехід був плавний при наведенні курсора прописуєм 
                transition: 0.3s all
            &::after
                content: ''
                display: block
                width: 2px
                height: 14px
                background-color: $main-color
                // щоб вирівняти вертикальну паличку, ще дописуєм 
                position: absolute
                left: 50%
                transform: translateX(-50%)
            // при наведенні на круг, колір хрестика буде мінятись, якщо 1 табуляцію і середній рядок забрати, то тоді кружок буде іняти колір
            &:hover
                &::before, &::after
                    background-color: white

                

.choice
    min-height: 896px
    padding: 56px 0 138px 0
    background: url('../img/bg/mobile_app.png') center (center / cover) no-repeat
    position: relative
    &_img
        position: relative
        display: block
        margin: 56px auto 0 auto
        z-index: 2
    &_logo_text
        color: #ffffff
        font-size: 44px
        font-weight: 400
        position: absolute
        top: 262px
        left: 50%
        transform: translateX(-50%)
        z-index: 3
    &_logo_subtext
        color: #000000
        font-size: 16px
        font-weight: 400
        position: absolute
        top: 323px
        left: 50%
        transform: translateX(-50%)
        z-index: 3
        text-transform: uppercase
    &_description
        text-align: center
        color: #222222
        font-size: 17px
        font-weight: 300
        line-height: 24px
    .black
        position: absolute
        top: 0
        left: 0
        background-color: #070716
        width: 100%
        height: 499px
        z-index: 1

.require
    padding: 68px 0 84px 0
    .condition_own_car_block
        margin: 33px 0
        // для того щоб забрати нижні марджини в нижніх блоків прописуєм наступне, і додаєм до класів двох останніх блоків!
        &_nmb
            margin-bottom: 0px
    &_title
        color: #1ca8c3
        font-size: 22px
        font-weight: 400
        line-height: normal
    &_list
        list-style-type: none
        padding-left: 50px
        margin-top: 22px
        li
            margin-bottom: 10px
            color: #222222
            font-size: 17px
            font-weight: 300
            line-height: 24px
            text-align: left
            display: inline-block
            // для того щоб сторінка не підгружала кожну галочку з сервера і оптимізувати нагрузку на сервер, створюєм галочки в кругах через псевдоелементи
            &::before
                content: ''
                width: 21px
                height: 20px
                background: url('../icons/check_blue.svg') center (center / cover) no-repeat
                // щоб вирівняти картинку з текстом в одну лінію, так як застосувати Флекси ми не можем до ЛІ (не буде працювати Бефор), міняєм дісплей:блок на інлайн-блок і тут і в батьківського елемента "li"
                display: inline-block
                vertical-align: middle
                // вирівнюєм кружки по вертикалі точно і відсуваєм від тексту
                transform: translate(-5px, -2px)
                