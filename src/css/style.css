* {
    font-family: 'Roboto', sans-serif;
}

/* це прописали коли робили наповзання напівпрозорого блоку (лого, номер і перша кнопка) на другий блок */
header {
    position: relative;
    height: 50px; /* робим шапку фіксованою зверху при прокрутці сторінки (дія 1 із 5) */
}

nav {
    /* п.5 так як ми винесли <nav> з <div class="container">, тепер ми можемо застилізувати нав замість хедера, і це буде правильніше, то тут також потрібно замінити 'header' на 'nav' ! */
    min-height: 50px;
    background-color: #212121;
    position: fixed; /* робим шапку фіксованою зверху при прокрутці сторінки (дія 2 із 5) */
    width: 100%; /* робим шапку фіксованою зверху при прокрутці сторінки (дія 3 із 5) */
    z-index: 2; /* робим шапку фіксованою зверху при прокрутці сторінки (дія 4 із 5) */
}

.menu {
    /*  п.1 'header nav' в середині хедера є нав, паддінги не можем прописати до шапки і контейнера (class="container"), тому прописуєм їх всередині контейнера, відповідно, до навігаційного меню <nav> */
    /*  п.2 '.menu' а ще можем застосувати ці правила напряму до класу 'class="menu"', по суті нічого дуже не зміниться, тільки паддінги тепер будуть в самого 'меню', а не у 'нав', а він в свою чергу просто розтягнувся на всю довжину, задану class="container", так як це блочний елемент*/
    padding: 13px 70px; /* крім відступів з обох боків нав меню по 70 пікселів, між пунктами навігації є розділювачі, які ми будем робити за допомогою "бордера", і вони згідно макету мають бути обмежені зверху і знизу по 10 пікселів, тому ми їх додали сюди замість початковогового "padding: 0 70px;" */
    margin: 0; /* так як в бутстрапі є задані певні параметри (в даному випадку 'margin-bottom: 1rem;'), то нам потрібно провірити і перенаназначити ці властивості під себе, згідно макету для кожного класу/контейнеру */
    list-style: none; /* так як ми використовуємо безномерний список (<ul>) для елементів які розташовані не попорядку, в нас є 'кругляшки' біля кожного меню, для того щоб їх забрати використовуємо цю функцію */
    display: flex; /* для того щоб всі меню вирівняти горизонтально (з вертикального списку), використовуєм цю властивість */
    justify-content: space-between; /* для того щоб розташувати всі меню симетрично по ширині відносно бічних границь, застосовуєм цю властивість */
    /* п.3 наш 'header' ми задали згідно макету - 50 пікселів, а от <div class="container"> розтягується по висоті в залежності від того, скільки контенту є в ньому, і зараз його висота получається 44 пікселі, через що знизу залишається невеликий зазор в 6 пікселів, що виглядає не симетрично в хедері, ми можем це поправити, трошки змінивши і підігнавши паддінги всередині нього, в <ul class="menu">. Замість 'padding: 10px 70px;' вирахуємо і підгонимо їх так, щоб цей контейнер мав таку ж вистоу як і 'header', тому вище в нас буде тепер 'padding: 13px 70px;' */
}

.menu .menu_link { 
    /* стилізуємо самі силки, а не <li>, як вони мають бути згідно з макетом */
    color: #ffffff;
    font-size: 15px;
    font-weight: 300;
    /* щоб силки не підкреслювались, використовуємо властивість нижче */
    text-decoration: none;
}

.menu .menu_item {
    /* робимо розділювачі між пунктами меню в хедері */
    border-right: 2px dotted black;
    /* відсуваєм наші розділювачі від краю кожного меню так, щоб вони знаходились по центру між 2 пунктами (в даному випадку точних розмірів на макеті немає - весь текст однією лінією в макеті, відміряли лінійкою, і взяли приблизне значення в 28px) */
    padding-right: 28px;
}

.subheader {
    height: 84px;
    /* opacity: 0.6; - тут авокод нам дав таку властивість, але так залишати неправильно, бо тоді весь блок буде з такою прозорістю (написи, і все решта). нам замість цього тре поставити прозорість в бекграунді (поміняти background-color: #000000; на background-color: rgba(0,0,0, .6);) */
    background-color: rgba(0,0,0, .6);
    /* для того щоб ця частина (напвіпрозорий блок з лого, номером і кнопкою) була поверх іншого блоку є 2 варіанти як це зробити  */
    /* в.1 - робим в цього блоку позиціювання - position: absolute;, і не забуваєм в батківського header призначити  {position: relative;} */
    position: absolute;
    /* і не забуваєм вказувати ширину, щоб блок не сплющувався після абсолютного позиціювання */
    /* ширина в такому випадку буде 100% від ширини батьківського блоку */
    width: 100%;
    top: 50px; /* робим шапку фіксованою зверху при прокрутці сторінки (дія 5 із 5) */
}

.subheader .subheader_logo {
    /* якщо раптом колись логотип поміняється (розміри можуть бути більшими, наприклад), то новий лого не буде вилізати за цю колонку, для цього застосовуєм 'max-width: 100%;' */
    max-width: 100%;
    margin-top: 16px;
    /* для того щоб вирівняти логотип по вертикалі згідно макету, тре додати цю строчку (display: block;), так як посилання в якому знаходиться логотип - від самого початку строчний елемент і марджини для нього не працюють !  */
    display: block;
}

.subheader .subheader_text {
    opacity: 0.5;
    color: #ffffff;
    font-size: 13px;
    font-weight: 300;
    margin-top: 6px;
}

.subheader .subheader_text_call {
    color: #ffffff;
    font-size: 12px;
    font-weight: 300;
    text-align: right;
    margin-top: 19px;
}

.subheader .subheader_phone {
    color: #ffffff;
    font-size: 22px;
    font-weight: 400;
    text-transform: uppercase;
    margin-top: 8px;
    /* силку також потрібно зробити блочним елементом, щоб не виникало проблем і можна було її вирівняти по правому краю */
    display: block;
    text-align: right;
    text-decoration: none;
    /* із за того, що в бутстрапі є задано лайн-хайт, мусим тут поправити за допомогою цієї ж властивості, зменшивши висоту строки, щоб номер піднявся вище */
    line-height: 17px;
}

.subheader .subheader_btn {
    margin-top: 20px;
    width: 172px;
    height: 46px;
    box-shadow: inset 0 -3px 0 rgba(0, 0, 0, 0.12);
    /* бордер в авокоді може косячити, тому можна попробувати його ставити як нижче */
    border: none;
    /* для того щоб зробити заокруглені кути в кнопки прописуємо наступну властивість */
    border-radius: 4px;
    background-image: linear-gradient(to top, #1eacc7 0%, #4ce2ff 100%);
    text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.21);
    color: #ffffff;
    font-size: 14px;
    font-weight: 400;
    text-align: center;
    text-transform: uppercase;
    outline: none;
}

.promo {
    min-height: 800px;
    /* для того щоб працювала картинка як задній фон, не забуваємо ставити ' ' в юрл */
    background: url('../img/bg/main_bg.jpg') center center / cover no-repeat;
    /* так як в нас зверху буде на секцію .promo наїжджати напвіпрозорий блок .subheader, то нам потрібно змістити всю цю структуру цього блоку вниз, враховуючи ширину .subheader'а і зразу зробити верхній відступ в заголовка .promo_header. Заодно можна й задати нижній відступ (нехай буде)) */
    padding: 150px 0 135px 0;
}

.promo .promo_header {
    color: #ffffff;
    font-size: 60px;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    /* так як в бутстрапі задані свої стандартні значення line-height, нам потрібно зробити так, щоб вони не впливали на наш текст і його положення, тому прописуєм свій line-height (берем його таке ж значення як і розмір шрифта для простоти) */
    line-height: 60px;
    /* аналогічно як із line-height */
    margin-bottom: 0px;
}

.promo .promo_subheader {
    margin-top: 20px;
    color: #ffffff;
    font-size: 36px;
    font-weight: 700;
    text-align: center;
    text-transform: uppercase;
    /* так як в бутстрапі задані свої стандартні значення line-height, нам потрібно зробити так, щоб вони не впливали на наш текст і його положення, тому прописуєм свій line-height (берем його таке ж значення як і розмір шрифта для простоти) */
    line-height: 36px;
    /* аналогічно як із line-height */
    margin-bottom: 0px;
}

.promo .promo_description {
    margin-top: 23px;
    color: #ffffff;
    font-size: 18px;
    font-weight: 300;
    text-align: center;
    line-height: 24px;
}

.promo .promo_btn {
    /* кнопка по факту інлайн-блок, а нам потрібен блок, щоб за допомою марджиныв вирывняти ъъ по центру, тому: */
    display: block;
    /* потім зразу задаєм відступ зверху-знизу, і вирівнюєм по горизонтлі в центр: */
    margin: 118px auto 0 auto;
    width: 259px;
    height: 63px;
    box-shadow: inset 0 -4px 0 rgba(0, 0, 0, 0.12);
    border: 3px solid rgba(0, 0, 0, 0.07);
    background-image: linear-gradient(to top, #1eacc7 0%, #4ce2ff 100%);
    /* для того щоб зробити заокруглені кути в кнопки прописуємо наступну властивість */
    border-radius: 4px;
    /* бордер в авокоді може косячити, тому можна попробувати його ставити як нижче */
    border: none;
    text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.21);
    color: #ffffff;
    font-size: 18px;
    font-weight: 400;
    text-align: center;
    text-transform: uppercase;
    outline: none;
}

.reasons {
    /* спочатку задали внутрішні відступи зверху і знизу в цілому блоці */
    padding: 71px 0 65px 0;
}

.label {
    /* центруєм по горизонталі */
    margin: 0 auto;
    width: 112px;
    height: 24px;
    background-color: #000000;
    color: #ffffff;
    font-size: 12px;
    font-weight: 400;
    /* внутрішні відступи для тексту, щоб вирівняти згідно макету */
    padding: 7px 0 6px 0;
    line-height: 13px;
    text-align: center;
    text-transform: uppercase;
}

.title {
    margin-top: 38px;
    /* в бутстрапі є нижні відступи задані, перевірити щоб не мішали, або забрати їх, як тут */
    margin-bottom: 0;
    color: #222222;
    font-size: 36px;
    font-weight: 700;
    line-height: 38px;
    text-align: center;
    text-transform: uppercase;
}

.reasons .reasons_block {
    margin-top: 38px;
    /* далі для того щоб можна було розмістити контейнери по сітці і вирівняти задаєм наступні три властивості */
    display: flex;
    justify-content: center;
    align-items: center;
}

.reasons .reasons_block .reasons_round {
    width: 113px;
    height: 113px;
    background-color: #1eacc7;
    /* далі робим голубі круги з квадратів */
    border-radius: 100%;
    /* далі щоб відцентрувати іконки в кругах перетворюємо знов в флекс контейнер з іконкою */
    display: flex;
    /* далі щоб вирівняти іконки в кругах вздовж головної осі по центру крга прописуєм */
    justify-content: center;
    /* далі для того щоб іконки вирівнялиць по центру вертикальної осі і не розтягувались в кругу, прописуєм наступне */
    align-items: center;
    /* ну і відступ від голубого круга до тексту поряд */
    margin-right: 26px;
}

.reasons .reasons_block .reasons_description {
    /* задаєм тільки ширину блоку з текстом */
    width: 343px;
}

.reasons .reasons_block .reasons_description .reasons_subtitle {
    line-height: 21px;
    color: #1eacc7;
    font-size: 17px;
    font-weight: 400;
    /* для того щоб круги не з'їжджали по висоті через різну вистоу заголовків (голубий) задав мін висоту заголовків */
    min-height: 50px;
    /* щоб вирівняти заголовки в контейнерах прописуєм спочатку тип а потім вирівнювання по низу контейнера */
    display: flex;
    align-items: flex-end;
}

.reasons .reasons_block .reasons_description .reasons_text {
    /* знову ж таки, через те що тексти різної вистоти в блоці получаються, задав мінімальну, щоб всі кружки були строго один навпроти одного */
    min-height: 110px;
    color: #202020;
    font-size: 15px;
    font-weight: 300;
    line-height: 21px;
    /* і вирівнювання тексту на всю ширину колонки */
    text-align: justify;
}